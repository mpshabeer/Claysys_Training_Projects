@model Batch_32_Final_Project.Models.Vacancy

@{
    Layout = "~/Views/Shared/HRLayout.cshtml";
}
<script src="~/Content/JS/vacancy.js"></script>

<div class="table-bordered bg-light" style="width:600px; margin-left:auto;margin-right:auto;padding:50px;">

    <h2 class="text-center">Create New Job Poster</h2>
    <hr />
    @if (ViewBag.Message != null)
    {
        <div class="text-bg-warning">@ViewBag.Message</div>
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-group row">
            <label class="col-md-4 col-form-label">Job Title:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validatejobtitle()" } })
                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                <div><small id="titlewarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Job Description:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validatedescription()" } })
                @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
                <div><small id="descriptionwarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Department:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validatedepartment()" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                <div><small id="departmentwarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>


        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Location:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", onfocusout = "validatelocation()" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                <div><small id="locationwarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Vacancy Status:</label>
            <div class="col-md-8">
                <select id="VacancyStatus" name="VacancyStatus" class="form-control" required>
                    <option value="Open">Open</option>
                    <option value="On Hold">On Hold</option>
                </select>
                @Html.ValidationMessageFor(model => model.VacancyStatus, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Number_of Openings:</label>
            <div class="col-md-8">
                <input type="number" id="NumberOfOpenings" name="NumberOfOpenings" class="form-control" onfocusout="validatenumberofopenings()" />
                @Html.ValidationMessageFor(model => model.NumberOfOpenings, "", new { @class = "text-danger" })
                <div><small id="noofopeningwarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Qualifications:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Qualifications, new { htmlAttributes = new { @class = "form-control", onfocusout = "validatequalification()" } })
                @Html.ValidationMessageFor(model => model.Qualifications, "", new { @class = "text-danger" })
                <div><small id="qualificationwarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Duties:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.ResponsibilitiesAndDuties, new { htmlAttributes = new { @class = "form-control", onfocusout = "validateduties()" } })
                @Html.ValidationMessageFor(model => model.ResponsibilitiesAndDuties, "", new { @class = "text-danger" })
                <div><small id="dutieswarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-4 col-form-label">salary range:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.SalaryRange, new { htmlAttributes = new { @class = "form-control", onfocusout = "validatesalary()" } })
                @Html.ValidationMessageFor(model => model.SalaryRange, "", new { @class = "text-danger" })
                <div><small id="salarywarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>



        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Close Date:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.LastDateToApply, new { htmlAttributes = new { @class = "form-control", onfocusout = "validateclosedate()" } })
                @Html.ValidationMessageFor(model => model.LastDateToApply, "", new { @class = "text-danger" })
                <div><small id="closedatewarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Recruiter InCharge:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.RecruiterInCharge, new { htmlAttributes = new { @class = "form-control", onfocusout = "validaterecruiter()" } })
                @Html.ValidationMessageFor(model => model.RecruiterInCharge, "", new { @class = "text-danger" })
                <div><small id="recruiterwarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Interview Rounds:</label>
            <div class="col-md-8">
                <input type="number" class="form-control" name="InterviewRounds" onfocusout="validateinterviewrounds()" />
                @Html.ValidationMessageFor(model => model.InterviewRounds, "", new { @class = "text-danger" })
                <div><small id="interviewwarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-4 col-form-label ">Selection Process:</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.SelectionProcess, new { htmlAttributes = new { @class = "form-control", onfocusout = "validateselection()" } })
                @Html.ValidationMessageFor(model => model.SelectionProcess, "", new { @class = "text-danger" })
                <div><small id="selectionwarn" style="text-align: center; color: red;"></small></div>
            </div>
        </div>

        <div class="form-group row">
            <div class="offset-md-4 col-md-8">
                <input type="submit" value="Create" class="btn btn-primary btn-submit" />
            </div>
        </div>
    }
</div>


