@model Batch_32_Final_Project.Models.Registration

@{
    ViewBag.Title = "Create new HR";
    Layout = "~/Views/Shared/HRLayout.cshtml";
}

<script src="~/Content/JS/Signup.js"></script>
<script src="~/Content/JS/Validations.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="table-bordered bg-light" style="width:600px; margin-left:auto;margin-right:auto;padding:50px;">

        <div class="text-bg-info"><strong class="alert-danger">@ViewBag.Message</strong></div>
        <div class="form-horizontal">
            <h2>Create New HR</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "col-form-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validatefirstname()" } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                    <div><small id="fnamewarn" style="text-align: center; color: red;"></small></div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "col-form-labell col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validatelastname()" } })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                    <div><small id="lnamewarn" style="text-align: center; color: red;"></small></div>
                </div>
            </div>

            <div class="form-group">



                @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "col-form-label col-md-4" })
                <div class="col-md-12">
                    <input type="date" id="Dateofbirth" name="Dateofbirth" class="form-control " onfocusout="validdates()" />
                    <div><small id="datewarn" style="text-align: center; color: red;"></small></div>

                    @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "col-form-label col-md-4" })
                
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Male  ", new { htmlAttributes = new { @class = "form-control" } }) Male
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Female  ", new { htmlAttributes = new { @class = "form-control" } }) Female
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Others  ", new { htmlAttributes = new { @class = "form-control" } }) Others
                    </label>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
               
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-form-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validatephone()" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    <div><small id="warnphone" style="text-align: center; color: red;"></small></div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-form-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validateemail()" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    <div><small id="warnemail" style="text-align: center; color: red;"></small></div>
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-form-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validateaddress()" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    <div><small id="addresswarn" style="text-align: center; color: red;"></small></div>
                </div>
            </div>


            <div class="form-group">
                <label class="col-form-label col-md-4">State</label>
                <div class="col-md-12">
                    <select id="state" name="state" onchange="selectcity(this.value)" class="form-control" required>
                        <option value="" selected disabled>Choose State</option>
                        <option value="Kerala">Kerala</option>
                        <option value="Tamilnadu">Tamilnadu</option>
                        <option value="Karnataka">Karnataka</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-form-label col-md-4">City</label>
                <div class="col-md-12">
                    <select id="cityselect" name="city" class="form-control" required>
                        <option selected disabled>Choose City</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "col-form-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-form-labell col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validatepassword()" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    <div><small id="passwordwarn" style="text-align: center; color: red;"></small></div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Confirmpassword, htmlAttributes: new { @class = "col-form-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Confirmpassword, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validateconfirmpassword()" } })
                    @Html.ValidationMessageFor(model => model.Confirmpassword, "", new { @class = "text-danger" })
                    <div><small id="confirmpasswordwarn" style="text-align: center; color: red;"></small></div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Sigup" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}





